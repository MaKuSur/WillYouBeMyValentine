<!DOCTYPE html>
<html lang="ru">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Ты будешь моей валентинкой?</title>
    <link href="https://fonts.googleapis.com/css2?family=Pacifico&display=swap" rel="stylesheet">
    <style>
        /* Общие стили */
        body {
            font-family: 'Pacifico', cursive;
            background-color: #ffe6f2;
            color: #ff1493;
            text-align: center;
            margin: 0;
            padding: 20px;
            position: relative;
            overflow: hidden;
            height: 100vh;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
        }

        body::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="%23ff1493" width="24px" height="24px"><path d="M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z"/></svg>');
            opacity: 0.1;
            z-index: -1;
        }

        h1 {
            font-size: 30px;
            /* Уменьшен размер шрифта для мобильных устройств */
            margin-bottom: 20px;
            animation: glow 2s infinite alternate;
            transition: margin-top 0.5s ease;
        }

        @keyframes glow {
            0% {
                color: #ff69b4;
            }

            100% {
                color: #ff1493;
            }
        }

        .buttons {
            display: flex;
            gap: 10px;
            /* Уменьшен отступ между кнопками */
            position: relative;
            transition: gap 0.5s ease;
        }

        .button {
            padding: 10px 20px;
            font-size: 18px;
            /* Уменьшен размер шрифта для мобильных устройств */
            border: none;
            border-radius: 10px;
            cursor: pointer;
            transition: all 0.5s ease;
            position: relative;
            z-index: 1;
        }

        .button.yes {
            background-color: #ff69b4;
            color: white;
        }

        .button.no {
            background-color: #ff1493;
            color: white;
            transition: transform 0.5s ease, font-size 0.5s ease, padding 0.5s ease;
        }

        .button:hover {
            transform: scale(1.1);
        }

        .playlist {
            display: none;
            flex-direction: column;
            align-items: center;
            gap: 20px;
            margin-top: 30px;
            opacity: 0;
            animation: fadeIn 1s forwards;
            width: 100%;
            height: auto;
            position: relative;
            overflow-y: auto;
            padding-bottom: 100px;
            transition: opacity 1s ease;
        }

        .playlist.visible {
            opacity: 1;
        }

        @keyframes fadeIn {
            to {
                opacity: 1;
            }
        }

        .records-container {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            /* Для мобильных устройств 2 колонки */
            gap: 10px;
            /* Уменьшен отступ между элементами */
            justify-content: center;
            align-items: center;
            width: 90%;
            max-width: 1200px;
            margin: 0 auto;
        }

        .record-item {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 10px;
        }

        .record {
            width: 80px;
            /* Уменьшен размер пластинки для мобильных устройств */
            height: 80px;
            background-color: #333;
            border-radius: 50%;
            position: relative;
            cursor: pointer;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

        .record:hover {
            transform: scale(1.1) translateY(-10px);
            box-shadow: 0 10px 20px rgba(255, 20, 147, 0.5);
        }

        .record::before {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 30px;
            /* Уменьшен размер сердечка */
            height: 30px;
            background-color: #ff1493;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 16px;
            /* Уменьшен размер шрифта */
            color: white;
        }

        .record::after {
            content: '♡';
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            font-size: 20px;
            /* Уменьшен размер шрифта */
            color: white;
        }

        @keyframes spin {
            0% {
                transform: rotate(0deg);
            }

            100% {
                transform: rotate(360deg);
            }
        }

        @keyframes blinkBackground {

            0%,
            100% {
                box-shadow: 0 0 20px rgba(255, 20, 147, 0.8);
            }

            50% {
                box-shadow: 0 0 40px rgba(255, 20, 147, 1);
            }
        }

        .record-wrapper {
            width: 80px;
            /* Уменьшен размер обертки */
            height: 80px;
            border-radius: 50%;
            display: flex;
            justify-content: center;
            align-items: center;
            position: relative;
        }

        .record.playing {
            animation: spin 2s linear infinite;
        }

        .record-wrapper.playing {
            animation: blinkBackground 1s ease-in-out infinite;
        }

        .record.paused {
            animation: none;
            transform: scale(1);
            /* Возвращаем пластинку к исходному размеру */
            box-shadow: none;
            /* Убираем тень */
        }

        .record-wrapper.paused {
            animation: none;
            box-shadow: none;
            /* Убираем тень */
        }

        footer {
            margin-top: 20px;
            /* Уменьшен отступ */
            font-size: 16px;
            /* Уменьшен размер шрифта */
            color: #ff69b4;
            text-align: center;
            width: 100%;
            position: relative;
            z-index: 1;
            padding: 10px;
            /* Уменьшен отступ */
            background-color: rgba(255, 255, 255, 0.8);
            border-radius: 10px;
        }

        /* Медиа-запросы для мобильных устройств */
        @media (max-width: 480px) {
            h1 {
                font-size: 24px;
                /* Еще меньше размер шрифта для очень маленьких экранов */
            }

            .buttons {
                flex-direction: column;
                /* Кнопки в столбик на очень маленьких экранах */
                gap: 10px;
            }

            .button {
                font-size: 16px;
                /* Еще меньше размер шрифта для кнопок */
                padding: 8px 16px;
            }

            .records-container {
                grid-template-columns: repeat(1, 1fr);
                /* Одна колонка на очень маленьких экранах */
            }

            .record {
                width: 60px;
                /* Еще меньше размер пластинки */
                height: 60px;
            }

            .record::before {
                width: 20px;
                /* Еще меньше размер сердечка */
                height: 20px;
                font-size: 12px;
            }

            .record::after {
                font-size: 16px;
                /* Еще меньше размер шрифта */
            }

            .love-text {
                font-size: 20px;
                /* Еще меньше размер шрифта для очень маленьких экранов */
                top: 15%;
                /* Сдвинь текст еще ниже */
                max-width: 80%;
                /* Уменьши максимальную ширину текста */
            }
        }

        .love-text {
            display: none;
            font-size: 24px;
            /* Уменьши размер шрифта для мобильных устройств */
            color: #ff1493;
            position: absolute;
            top: 20%;
            /* Начни текст ниже, чтобы он не перекрывал другие элементы */
            left: 50%;
            transform: translateX(-50%);
            opacity: 0;
            animation: fadeInText 1s forwards;
            font-family: 'Parisienne', cursive;
            white-space: normal;
            /* Разреши перенос текста на новую строку */
            text-align: center;
            /* Выравнивание текста по центру */
            width: 90%;
            /* Ограничь ширину текста */
            max-width: 300px;
            /* Максимальная ширина текста */
            word-wrap: break-word;
            /* Перенос слов, если они не помещаются */
            overflow-y: auto;
            /* Добавь прокрутку, если текст не помещается */
            max-height: 60vh;
            /* Ограничь высоту текста */
        }

        @keyframes fadeInText {
            to {
                opacity: 1;
            }
        }

        @keyframes fadeOutText {
            to {
                opacity: 0;
            }
        }

        .love-text span {
            display: inline-block;
            opacity: 0;
            animation: fadeInWord 0.5s forwards;
        }

        @keyframes fadeInWord {
            to {
                opacity: 1;
            }
        }

        audio {
            width: 100%;
            margin-top: 10px;
        }

        .kitten {
            width: 100px;
            /* Уменьшен размер изображения котенка */
            height: auto;
            margin-top: 20px;
        }

        .photo-container {
            position: relative;
            width: 100%;
            height: 100vh;
            pointer-events: none;
        }

        .photo-frame {
            position: absolute;
            width: 100px;
            /* Уменьшен размер рамок для фотографий */
            height: 100px;
            border: 5px solid #fff;
            /* Уменьшен размер рамки */
            box-shadow: 0 0 5px rgba(0, 0, 0, 0.5);
            /* Уменьшена тень */
            background-color: #fff;
            transform: rotate(-5deg);
            overflow: hidden;
            z-index: 1;
        }

        .photo-frame img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .photo-frame.top-left {
            top: 10px;
            /* Уменьшено позиционирование */
            left: 10px;
            transform: rotate(-5deg);
        }

        .photo-frame.top-right {
            top: 10px;
            right: 10px;
            transform: rotate(5deg);
        }

        .photo-frame.bottom-left {
            bottom: 10px;
            left: 10px;
            transform: rotate(5deg);
        }

        .photo-frame.bottom-right {
            bottom: 10px;
            right: 10px;
            transform: rotate(-5deg);
        }

        .photo-frame.middle-left {
            top: 50%;
            left: 10px;
            transform: translateY(-50%) rotate(-5deg);
        }

        .photo-frame.middle-right {
            top: 50%;
            right: 10px;
            transform: translateY(-50%) rotate(5deg);
        }
    </style>
</head>

<body>
    <div id="question">
        <div class="photo-frame top-left"><img src="photo_1.jpg" alt="Фото 1"></div>
        <div class="photo-frame top-right"><img src="photo_2.jpg" alt="Фото 2"></div>
        <div class="photo-frame bottom-left"><img src="photo_3.jpg" alt="Фото 3"></div>
        <div class="photo-frame bottom-right"><img src="photo_4.jpg" alt="Фото 4"></div>
        <div class="photo-frame middle-left"><img src="photo_5.jpg" alt="Фото 5"></div>
        <div class="photo-frame middle-right"><img src="photo_6.jpg" alt="Фото 6"></div>
        <h1 id="questionText">Will you be my Valentine? 💖</h1>
        <div class="buttons">
            <button class="button yes" id="yesButton">Да</button>
            <button class="button no" id="noButton">Нет</button>
        </div>
        <img src="https://media.giphy.com/media/VbnUQpnihPSIgIXuZv/giphy.gif" alt="Милый котёнок" class="kitten">
    </div>
    <div id="loveText" class="love-text"></div>
    <div id="playlist" class="playlist">
        <h1>💖 Плейлист, песни которого ассоциируется у меня с тобой 💖</h1>
        <div class="records-container">
            <div class="record-item">
                <div class="record-wrapper">
                    <div class="record" onclick="playSong('song1')">
                        <audio id="song1" src="Aerosmith - I Don't Want to Miss a Thing.mp3"></audio>
                    </div>
                </div>
                <div class="record-label">Aerosmith - I Don't Want to Miss a Thing</div>
            </div>
        </div>
        <footer>С любовью, твоя гусеница 💕</footer>
    </div>
    <script>
        const noButton = document.getElementById('noButton');
        const yesButton = document.getElementById('yesButton');
        const questionText = document.getElementById('questionText');
        const buttonsContainer = document.querySelector('.buttons');
        const loveText = document.getElementById('loveText');
        const messages = [
            "Ну пожалуйста! Я знаю, ты хотела выбрать другое!",
            "Может, ты хочешь передумать?",
            "Прошу, малыш, сделай другой выбор!",
            "Ты уверена? Давай ещё раз подумаем!",
            "Я знаю, ты хочешь сказать 'Да'!",
            "Попробуй ещё раз, я верю в тебя!",
        ];
        let messageIndex = 0;

        function growYesButton() {
            const currentWidth = yesButton.offsetWidth;
            const currentHeight = yesButton.offsetHeight;
            yesButton.style.width = `${currentWidth + 50}px`; /* Уменьшен рост кнопки */
            yesButton.style.height = `${currentHeight + 20}px`;
            questionText.style.marginTop = '10px';
            noButton.style.fontSize = '14px'; /* Уменьшен размер шрифта */
            noButton.style.padding = '5px 10px';
            noButton.style.transform = 'translateX(10px)'; /* Уменьшено смещение */
            buttonsContainer.style.gap = '5px'; /* Уменьшен отступ */
            noButton.style.width = '120px'; /* Уменьшен размер кнопки */
            noButton.style.height = '80px';
        }

        function showPlaylist() {
            document.getElementById('playlist').style.display = 'flex';
        }

        function askAgain() {
            growYesButton();
            noButton.textContent = messages[messageIndex];
            messageIndex = (messageIndex + 1) % messages.length;
        }

        function startLoveAnimation() {
            document.getElementById('question').style.display = 'none';
            const loveText = document.getElementById('loveText');
            loveText.style.display = 'block';
            const text = "I've fallen deeply in love with you, my baby";
            const words = text.split(' ');
            let index = 0;

            function showNextWord() {
                const firstSong = document.getElementById('song1');
                firstSong.play();
                if (index < words.length) {
                    loveText.textContent += words[index] + ' ';
                    index++;
                    setTimeout(showNextWord, 1000);
                } else {
                    setTimeout(() => {
                        loveText.style.animation = 'fadeOutText 1s forwards';
                        document.getElementById('playlist').style.display = 'block';
                        setTimeout(() => {
                            playlist.classList.add('visible');
                        }, 10);
                        const firstRecord = document.querySelector('.record');
                        const firstRecordWrapper = firstRecord.parentElement;
                        firstRecord.classList.add('playing');
                        firstRecordWrapper.classList.add('playing');
                    }, 1000);
                }
            }
            showNextWord();
        }

        function playSong(songId) {
                const audio = document.getElementById(songId);
                const record = document.querySelector(`[onclick="playSong('${songId}')"]`);
                const recordWrapper = record.parentElement;

                // Проверяем, играет ли текущее аудио
                const isPlaying = !audio.paused;

                // Останавливаем все другие аудио и сбрасываем их состояние
                document.querySelectorAll('audio').forEach(audioElement => {
                    if (audioElement !== audio) {
                        audioElement.pause();
                        audioElement.currentTime = 0;
                        const otherRecord = document.querySelector(`[onclick="playSong('${audioElement.id}')"]`);
                        const otherRecordWrapper = otherRecord.parentElement;
                        otherRecord.classList.remove('playing', 'paused');
                        otherRecordWrapper.classList.remove('playing', 'paused');
                    }
                });

                // Если текущее аудио уже играет, ставим его на паузу
                if (isPlaying) {
                    console.log(`Pausing audio: ${songId}`); // Лог для отладки
                    audio.pause();
                    audio.currentTime = 0; // Сбрасываем время воспроизведения
                    record.classList.remove('playing');
                    record.classList.add('paused');
                    recordWrapper.classList.remove('playing');
                    recordWrapper.classList.add('paused');
                } else {
                    // Если аудио на паузе или не играло, воспроизводим его
                    console.log(`Playing audio: ${songId}`); // Лог для отладки
                    audio.play();
                    record.classList.remove('paused');
                    record.classList.add('playing');
                    recordWrapper.classList.remove('paused');
                    recordWrapper.classList.add('playing');
                }
            }
        yesButton.addEventListener('click', startLoveAnimation);
        noButton.addEventListener('click', askAgain);
    </script>
</body>

</html>